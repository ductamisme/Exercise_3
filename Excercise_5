Vòng Đời Phát Triển Phần Mềm

Waterfall Model

Model Waterfall trong kỹ thuật phần mềm là một phương pháp tiếp cận tuần tự, trong đó mỗi bước phát triển tiếp theo chỉ bắt đầu khi bước trước đó đã hoàn thành. Dưới đây là một số đặc điểm chính của Waterfall Model:

1. Yêu Cầu Xác Định Rõ Ràng:
   - Mọi yêu cầu về chức năng và phi chức năng được xác định một cách rõ ràng từ đầu.

2. Môi Trường Phát Triển Ổn Định:
   - Môi trường phát triển được duy trì ổn định trong suốt quá trình phát triển.

3. Dễ Hiểu, Dễ Triển Khai:
   - Phương pháp này dễ hiểu và triển khai, đặc biệt là cho các dự án có yêu cầu xác định trước.

4. Dễ Dàng Cho Việc Tracking:
   - Việc theo dõi tiến độ thực hiện một cách tuần tự từng bước một.

5. Tài Liệu Thiết Kế Sớm:
   - Tài liệu thiết kế được tạo sớm trong quá trình phát triển.

6. Quy Trình Phát Triển Tuần Tự:
   - Quy trình tiếp cận từng bước một: Yêu Cầu -> Thiết Kế -> Phát Triển -> Kiểm Thử -> Triển Khai -> Bảo Trì.

7. Tập Trung Chủ Yếu Vào Giai Đoạn Phát Triển:
   - Chú trọng vào giai đoạn phát triển phần mềm, đặc biệt là quá trình gia công phần mềm.

8. Yêu Cầu Cho Người Phát Triển Thực Thụ:
   - Nếu muốn trở thành một nhà phát triển thực thụ, cần hiểu rõ về từng giai đoạn, đặc biệt là yêu cầu.

Quản lý Yêu Cầu (SRS - Software Requirement Specification)

| STT | Tiêu Đề                | Người Thực Hiện | Ngày       | Ghi Chú                         |
|-----|------------------------|-----------------|------------|---------------------------------|
| 1   | Yêu Cầu Chức Năng      | Tâm             | 3/1/2024   | Tạo đủ các chức năng            |
| 2   | ...                    | ...             | ...        | ...                             |

Glossary

| STT | Ví Dụ                  | Từ Ngữ Tiếng Anh  | Từ Ngữ Tiếng Việt   |
|-----|------------------------|-------------------|---------------------|
| 1   | Acquainted with        | Acquainted with   | Làm Quen Với        |
| 2   | ...                    | ...               | ...                 |

Phụ Lục Yêu Cầu Chức Năng

Yêu Cầu Chức Năng:
1. Học sinh phải đăng nhập.
2. Học sinh có thể vào lớp.

Yêu Cầu Phi Chức Năng:
1. Chạy có nhanh không.
2. Nhiều người dùng được không/cùng lúc.

Thiết Kế

- Tài Liệu Phân Tích Thiết Kế:
  - Sử dụng UML/UI UX (OOP): use case, class, data flow.
  - Thiết kế giao diện người dùng bằng Figma.
  - High-level design.

- Backend (nên):
  - Đọc giao diện để thiết kế trả ít trường hơn request/response.

Phát Triển

- Viết mã Frontend/Backend API, job (các công việc tự động như thông báo trừ tiền, thuật toán).
- Output là một sản phẩm hoàn chỉnh.

Kiểm Thử Phần Mềm

- Unit test: Kiểm thử đơn vị.
- Integration test: Kiểm thử tích hợp.
- System test: Kiểm thử lại một luồng mới.
- Acceptance test: Kiểm thử cuối cùng trước khi triển khai.

Triển Khai (Publish)

- Chạy mã nguồn trên server.
- Hệ thống có thể truy cập internet và mọi người đều có thể truy cập.

Bảo Trì

- Sửa lỗi phát sinh sau khi triển khai mà người dùng phát hiện ra, thường xuất hiện ngay sau triển khai.

Nhược Điểm Của Waterfall:

- Phát hiện lỗi muộn.
- Khó khăn trong việc ước lượng thời gian và chi phí.
- Thiếu linh hoạt.
- Lỗi hồi quy.

Agile

- Agile tránh được lỗi hồi quy do sự thay đổi của khách hàng.
- Agile là một triết lý về làm thế nào để nhanh chóng thích ứng với sự thay đổi.

Các Nguyên Tắc Của Agile

1. Ưu tiên cao nhất là thoả mãn khách hàng thông qua chuyển giao sớm các phần mềm có giá trị
2. Chào đón việc thay đổi yêu cầu, 
3. Các quy trình linh hoạt tận dụng sự thay đổi trong các lợi thế cạnh tranh của khách hàng
4. Thường xuyên chuyển giao phần mềm chạy tốt đến khách hàng ưu tiên các khoảng thời gian ngắn hơn
5. Nhà kinh doanh nhà phát triển làm việc với nhau trong suốt dự án
6. Xây dựng các dự án xung quanh những các nhân có động lực cung cấp cho họ môi trường và sự hỗ trợ cần thiết và tin tưởng họ để thoả sức sáng tạo
7. Hội thoại trực tiếp là phương pháp tốt nhất để truyền đạt thông tin nội bộ
8.  Phần mềm chạy tốt là thước đo của tiến độ
9. Các quy trinh linh hoạt thúc đẩy phát triển bền vững:có thể duy trì một nhịp độ không giới hạn
10. Liên tục quan tâm đến các kĩ thuật thiết kế tốt để gia tăng sự linh hoạt ( spotyfy frame work)
11. Sự đơn giản, nghệ thuật tối đa hoá lượng công việc chưa xong là căn bản còn tồn đọng
12. Các kiến trúc tốt, yêu cầu tốt nhất, thiết kế tốt nhất, thì được làm gia bởi các nhóm tự tổ chức
- Nhóm phát triển thường xuyên nghĩ về việc làm sao để trở nên hiệu quả hơn (retrospective) 
(đoạn này hình như kh có nằm trong tuyên ngôn nhưng cần phải để ý )

Các Chiếc Ô Agile:

- Scrum.
- Extreme Programming.
- Kanban.
- Scrumban.
- Spotify (squad, trio, guild, alliance).

Công Cụ:

- Jira.
- Trello.
- GitHub.
- Excel.

Chú Ý:
- Một khi đã bắt đầu Sprint, không được phép thay đổi, ngoại trừ lỗi cần sửa giữa Sprint.
- Bức tường thất bại.
